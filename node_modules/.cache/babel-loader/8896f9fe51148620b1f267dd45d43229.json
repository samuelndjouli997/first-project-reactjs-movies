{"ast":null,"code":"var _jsxFileName = \"/Users/samuelndjouliamougou/Desktop/b2dev/module spe\\u0301 dev/react/pizzas/src/page/Pizzas.js\",\n    _s = $RefreshSig$();\n\n// pizza.js\nimport React, { useState, useEffect } from \"react\";\nimport PizzaCard from \"../component/PizzaCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(process.env.REACT_APP_ROOT_URL);\nconst URL_PIZZAS = process.env.REACT_APP_ROOT_URL + \"Pizzas\";\n\nconst Pizzas = () => {\n  _s();\n\n  // declaration\n  const [pizzas, setPizzas] = useState([]);\n  const [pizzasTomate, setPizzasTomate] = useState([]);\n  const [pizzasCreme, setPizzasCreme] = useState([]); // \n\n  useEffect(() => {\n    searchPizzas();\n  }, []);\n\n  const searchPizzas = async () => {\n    // fetch \n    const response = await fetch(URL_PIZZAS + \"?sort=-category,name\", {\n      method: \"GET\",\n      headers: {\n        \"xc-auth\": process.env.REACT_APP_NOCODB_KEY\n      }\n    });\n    const data = await response.json(); // crééer 2 tableaux temporaires\n\n    let dataC = [];\n    let dataT = [];\n    data.map(pizza => {\n      if (pizza.category == \"tomate\") {\n        dataT.push(pizza);\n      } else {\n        dataC.push(pizza);\n      }\n    });\n    setPizzasTomate(dataT);\n    setPizzasCreme(dataC); // faire une boucle sur data\n    // if ....\n    // set setPizzasTomate et setPizzasCreme     \n\n    console.table(data[0]);\n    setPizzas(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ceci est la page Pizzas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), (pizzas === null || pizzas === void 0 ? void 0 : pizzas.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tomates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: pizzasTomate.map(pizza => /*#__PURE__*/_jsxDEV(PizzaCard, {\n          pizza: pizza\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pas de pizzas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Pizzas, \"v4zJ+EB6V5TN8xM2jLb+YX/5D3o=\");\n\n_c = Pizzas;\nexport default Pizzas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pizzas\");","map":{"version":3,"sources":["/Users/samuelndjouliamougou/Desktop/b2dev/module spé dev/react/pizzas/src/page/Pizzas.js"],"names":["React","useState","useEffect","PizzaCard","console","log","process","env","REACT_APP_ROOT_URL","URL_PIZZAS","Pizzas","pizzas","setPizzas","pizzasTomate","setPizzasTomate","pizzasCreme","setPizzasCreme","searchPizzas","response","fetch","method","headers","REACT_APP_NOCODB_KEY","data","json","dataC","dataT","map","pizza","category","push","table","length"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,kBAAxB;AAEA,MAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAiC,QAApD;;AAEA,MAAME,MAAM,GAAG,MAAM;AAAA;;AACjB;AACA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAK,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAK,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA7C,CAJiB,CAMjB;;AACAC,EAAAA,SAAS,CAAE,MAAM;AACbe,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,YAAW;AAC5B;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,UAAU,GAAG,sBAAd,EAAsC;AAC9DW,MAAAA,MAAM,EAAE,KADsD;AAE9DC,MAAAA,OAAO,EAAE;AACL,mBAAWf,OAAO,CAACC,GAAR,CAAYe;AADlB;AAFqD,KAAtC,CAA5B;AAMA,UAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB,CAR4B,CAU5B;;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AAEAH,IAAAA,IAAI,CAACI,GAAL,CAAUC,KAAD,IAAW;AAChB,UAAKA,KAAK,CAACC,QAAN,IAAkB,QAAvB,EAAkC;AAC9BH,QAAAA,KAAK,CAACI,IAAN,CAAWF,KAAX;AACF,OAFF,MAEQ;AACJH,QAAAA,KAAK,CAACK,IAAN,CAAWF,KAAX;AACK;AAEZ,KAPD;AASAd,IAAAA,eAAe,CAACY,KAAD,CAAf;AACAV,IAAAA,cAAc,CAACS,KAAD,CAAd,CAxB4B,CA0B5B;AACA;AACA;;AAMArB,IAAAA,OAAO,CAAC2B,KAAR,CAAcR,IAAI,CAAC,CAAD,CAAlB;AACAX,IAAAA,SAAS,CAACW,IAAD,CAAT;AACH,GApCD;;AAuCA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAAZ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEqB,MAAR,IAAiB,CAAjB,gBACD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKnB,YAAY,CAACc,GAAb,CAAkBC,KAAD,iBAEd,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBADC,gBAYG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdR;AAAA,kBADJ;AAmBH,CArED;;GAAMlB,M;;KAAAA,M;AAuEN,eAAeA,MAAf","sourcesContent":["// pizza.js\n\nimport React, { useState, useEffect } from \"react\";\n\nimport PizzaCard from \"../component/PizzaCard\";\n\nconsole.log(process.env.REACT_APP_ROOT_URL);\n\nconst URL_PIZZAS = process.env.REACT_APP_ROOT_URL + \"Pizzas\";\n\nconst Pizzas = () => {\n    // declaration\n    const[pizzas, setPizzas] = useState([]);\n    const[pizzasTomate, setPizzasTomate] = useState([]);\n    const[pizzasCreme, setPizzasCreme] = useState([]);\n\n    // \n    useEffect( () => {\n        searchPizzas();\n    }, [])\n\n    const searchPizzas = async() => {\n        // fetch \n        const response = await fetch(URL_PIZZAS + \"?sort=-category,name\", {\n            method: \"GET\",\n            headers: {\n                \"xc-auth\": process.env.REACT_APP_NOCODB_KEY,\n            },\n        });\n        const data = await response.json();\n\n        // crééer 2 tableaux temporaires\n        let dataC = [];\n        let dataT = [];\n\n        data.map((pizza) => {\n            if ( pizza.category == \"tomate\" ) {\n                dataT.push(pizza);\n             } else {\n                dataC.push(pizza);\n                    }          \n                        \n        });\n             \n        setPizzasTomate(dataT);\n        setPizzasCreme(dataC);\n\n        // faire une boucle sur data\n        // if ....\n        // set setPizzasTomate et setPizzasCreme     \n        \n        \n\n\n\n        console.table(data[0]);\n        setPizzas(data);\n    };\n    \n\n    return (\n        <>\n            <h1>Ceci est la page Pizzas</h1>\n            {pizzas?.length > 0 ? (\n            <>\n                <h2>Tomates</h2>\n                <div className=\"row\">\n                    {pizzasTomate.map((pizza) => (\n                        \n                        <PizzaCard pizza={pizza} />\n                    ))}\n                </div>\n            </>\n                \n            ) : (\n                <div>Pas de pizzas</div>\n            )}\n        </>\n    ); \n};\n\nexport default Pizzas;"]},"metadata":{},"sourceType":"module"}